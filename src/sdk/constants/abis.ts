export class ABI {
  public static get(name: string): string {
    let abi;
    switch (name) {
      case 'ERC721':
        abi = [
          {
            type: 'constructor',
            stateMutability: 'nonpayable',
            inputs: [],
          },
          {
            type: 'event',
            name: 'Approval',
            inputs: [
              {
                type: 'address',
                name: 'owner',
                internalType: 'address',
                indexed: true,
              },
              {
                type: 'address',
                name: 'approved',
                internalType: 'address',
                indexed: true,
              },
              {
                type: 'uint256',
                name: 'tokenId',
                internalType: 'uint256',
                indexed: true,
              },
            ],
            anonymous: false,
          },
          {
            type: 'event',
            name: 'ApprovalForAll',
            inputs: [
              {
                type: 'address',
                name: 'owner',
                internalType: 'address',
                indexed: true,
              },
              {
                type: 'address',
                name: 'operator',
                internalType: 'address',
                indexed: true,
              },
              {
                type: 'bool',
                name: 'approved',
                internalType: 'bool',
                indexed: false,
              },
            ],
            anonymous: false,
          },
          {
            type: 'event',
            name: 'OwnershipTransferred',
            inputs: [
              {
                type: 'address',
                name: 'previousOwner',
                internalType: 'address',
                indexed: true,
              },
              {
                type: 'address',
                name: 'newOwner',
                internalType: 'address',
                indexed: true,
              },
            ],
            anonymous: false,
          },
          {
            type: 'event',
            name: 'Transfer',
            inputs: [
              {
                type: 'address',
                name: 'from',
                internalType: 'address',
                indexed: true,
              },
              {
                type: 'address',
                name: 'to',
                internalType: 'address',
                indexed: true,
              },
              {
                type: 'uint256',
                name: 'tokenId',
                internalType: 'uint256',
                indexed: true,
              },
            ],
            anonymous: false,
          },
          {
            type: 'function',
            stateMutability: 'nonpayable',
            outputs: [],
            name: 'approve',
            inputs: [
              { type: 'address', name: 'to', internalType: 'address' },
              { type: 'uint256', name: 'tokenId', internalType: 'uint256' },
            ],
          },
          {
            type: 'function',
            stateMutability: 'view',
            outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
            name: 'balanceOf',
            inputs: [{ type: 'address', name: 'owner', internalType: 'address' }],
          },
          {
            type: 'function',
            stateMutability: 'view',
            outputs: [{ type: 'string', name: '', internalType: 'string' }],
            name: 'baseURI',
            inputs: [],
          },
          {
            type: 'function',
            stateMutability: 'view',
            outputs: [{ type: 'address', name: '', internalType: 'address' }],
            name: 'getApproved',
            inputs: [{ type: 'uint256', name: 'tokenId', internalType: 'uint256' }],
          },
          {
            type: 'function',
            stateMutability: 'view',
            outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
            name: 'isApprovedForAll',
            inputs: [
              { type: 'address', name: 'owner', internalType: 'address' },
              { type: 'address', name: 'operator', internalType: 'address' },
            ],
          },
          {
            type: 'function',
            stateMutability: 'nonpayable',
            outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
            name: 'mintItem',
            inputs: [
              { type: 'address', name: 'to', internalType: 'address' },
              { type: 'string', name: 'tokenURI', internalType: 'string' },
            ],
          },
          {
            type: 'function',
            stateMutability: 'view',
            outputs: [{ type: 'string', name: '', internalType: 'string' }],
            name: 'name',
            inputs: [],
          },
          {
            type: 'function',
            stateMutability: 'view',
            outputs: [{ type: 'address', name: '', internalType: 'address' }],
            name: 'owner',
            inputs: [],
          },
          {
            type: 'function',
            stateMutability: 'view',
            outputs: [{ type: 'address', name: '', internalType: 'address' }],
            name: 'ownerOf',
            inputs: [{ type: 'uint256', name: 'tokenId', internalType: 'uint256' }],
          },
          {
            type: 'function',
            stateMutability: 'nonpayable',
            outputs: [],
            name: 'renounceOwnership',
            inputs: [],
          },
          {
            type: 'function',
            stateMutability: 'nonpayable',
            outputs: [],
            name: 'safeTransferFrom',
            inputs: [
              { type: 'address', name: 'from', internalType: 'address' },
              { type: 'address', name: 'to', internalType: 'address' },
              { type: 'uint256', name: 'tokenId', internalType: 'uint256' },
            ],
          },
          {
            type: 'function',
            stateMutability: 'nonpayable',
            outputs: [],
            name: 'safeTransferFrom',
            inputs: [
              { type: 'address', name: 'from', internalType: 'address' },
              { type: 'address', name: 'to', internalType: 'address' },
              { type: 'uint256', name: 'tokenId', internalType: 'uint256' },
              { type: 'bytes', name: '_data', internalType: 'bytes' },
            ],
          },
          {
            type: 'function',
            stateMutability: 'nonpayable',
            outputs: [],
            name: 'setApprovalForAll',
            inputs: [
              {
                type: 'address',
                name: 'operator',
                internalType: 'address',
              },
              { type: 'bool', name: 'approved', internalType: 'bool' },
            ],
          },
          {
            type: 'function',
            stateMutability: 'view',
            outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
            name: 'supportsInterface',
            inputs: [
              {
                type: 'bytes4',
                name: 'interfaceId',
                internalType: 'bytes4',
              },
            ],
          },
          {
            type: 'function',
            stateMutability: 'view',
            outputs: [{ type: 'string', name: '', internalType: 'string' }],
            name: 'symbol',
            inputs: [],
          },
          {
            type: 'function',
            stateMutability: 'view',
            outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
            name: 'tokenByIndex',
            inputs: [{ type: 'uint256', name: 'index', internalType: 'uint256' }],
          },
          {
            type: 'function',
            stateMutability: 'view',
            outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
            name: 'tokenOfOwnerByIndex',
            inputs: [
              { type: 'address', name: 'owner', internalType: 'address' },
              { type: 'uint256', name: 'index', internalType: 'uint256' },
            ],
          },
          {
            type: 'function',
            stateMutability: 'view',
            outputs: [{ type: 'string', name: '', internalType: 'string' }],
            name: 'tokenURI',
            inputs: [{ type: 'uint256', name: 'tokenId', internalType: 'uint256' }],
          },
          {
            type: 'function',
            stateMutability: 'view',
            outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
            name: 'totalSupply',
            inputs: [],
          },
          {
            type: 'function',
            stateMutability: 'nonpayable',
            outputs: [],
            name: 'transferFrom',
            inputs: [
              { type: 'address', name: 'from', internalType: 'address' },
              { type: 'address', name: 'to', internalType: 'address' },
              { type: 'uint256', name: 'tokenId', internalType: 'uint256' },
            ],
          },
          {
            type: 'function',
            stateMutability: 'nonpayable',
            outputs: [],
            name: 'transferOwnership',
            inputs: [{ type: 'address', name: 'newOwner', internalType: 'address' }],
          },
        ];
        break;
      case 'NftTransfer':
        abi = [
          {
            constant: true,
            inputs: [{ name: '_wallet', type: 'address' }],
            name: 'getNonce',
            outputs: [{ name: 'nonce', type: 'uint256' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: '_wallet', type: 'address' },
              { name: '_module', type: 'address' },
            ],
            name: 'addModule',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: false,
            inputs: [{ name: '_token', type: 'address' }],
            name: 'recoverToken',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: '_wallet', type: 'address' },
              { name: '_data', type: 'bytes' },
              { name: '_nonce', type: 'uint256' },
              { name: '_signatures', type: 'bytes' },
              { name: '_gasPrice', type: 'uint256' },
              { name: '_gasLimit', type: 'uint256' },
            ],
            name: 'execute',
            outputs: [{ name: 'success', type: 'bool' }],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: true,
            inputs: [{ name: '', type: 'address' }],
            name: 'relayer',
            outputs: [{ name: 'nonce', type: 'uint256' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: true,
            inputs: [],
            name: 'isOnlyOwnerModule',
            outputs: [{ name: '', type: 'bytes4' }],
            payable: false,
            stateMutability: 'pure',
            type: 'function',
          },
          {
            constant: true,
            inputs: [],
            name: 'guardianStorage',
            outputs: [{ name: '', type: 'address' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            inputs: [
              { name: '_registry', type: 'address' },
              { name: '_guardianStorage', type: 'address' },
            ],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'constructor',
          },
          {
            anonymous: false,
            inputs: [
              { indexed: true, name: 'wallet', type: 'address' },
              { indexed: true, name: 'nftContract', type: 'address' },
              { indexed: true, name: 'tokenId', type: 'uint256' },
              { indexed: false, name: 'to', type: 'address' },
              { indexed: false, name: 'data', type: 'bytes' },
            ],
            name: 'NonFungibleTransfer',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [
              { indexed: true, name: 'wallet', type: 'address' },
              { indexed: true, name: 'success', type: 'bool' },
              { indexed: false, name: 'signedHash', type: 'bytes32' },
            ],
            name: 'TransactionExecuted',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [{ indexed: false, name: 'name', type: 'bytes32' }],
            name: 'ModuleCreated',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [{ indexed: false, name: 'wallet', type: 'address' }],
            name: 'ModuleInitialised',
            type: 'event',
          },
          {
            constant: false,
            inputs: [{ name: '_wallet', type: 'address' }],
            name: 'init',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: '', type: 'address' },
              { name: '', type: 'address' },
              { name: '', type: 'uint256' },
              { name: '', type: 'bytes' },
            ],
            name: 'onERC721Received',
            outputs: [{ name: '', type: 'bytes4' }],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: '_wallet', type: 'address' },
              { name: '_nftContract', type: 'address' },
              { name: '_to', type: 'address' },
              { name: '_tokenId', type: 'uint256' },
              { name: '_safe', type: 'bool' },
              { name: '_data', type: 'bytes' },
            ],
            name: 'transferNFT',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
        ];
        break;
      case 'ERC20':
        abi = [
          {
            constant: true,
            inputs: [],
            name: 'name',
            outputs: [{ name: '', type: 'string' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: 'spender', type: 'address' },
              { name: 'value', type: 'uint256' },
            ],
            name: 'approve',
            outputs: [{ name: '', type: 'bool' }],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: true,
            inputs: [],
            name: 'totalSupply',
            outputs: [{ name: '', type: 'uint256' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: 'sender', type: 'address' },
              { name: 'recipient', type: 'address' },
              { name: 'amount', type: 'uint256' },
            ],
            name: 'transferFrom',
            outputs: [{ name: '', type: 'bool' }],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: true,
            inputs: [],
            name: 'decimals',
            outputs: [{ name: '', type: 'uint8' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: 'spender', type: 'address' },
              { name: 'addedValue', type: 'uint256' },
            ],
            name: 'increaseAllowance',
            outputs: [{ name: '', type: 'bool' }],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: true,
            inputs: [],
            name: 'tokenURI',
            outputs: [{ name: '', type: 'string' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: '_to', type: 'address' },
              { name: '_value', type: 'uint256' },
              { name: '_data', type: 'bytes' },
            ],
            name: 'transferAndCall',
            outputs: [{ name: '', type: 'bool' }],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: true,
            inputs: [{ name: 'account', type: 'address' }],
            name: 'balanceOf',
            outputs: [{ name: '', type: 'uint256' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: false,
            inputs: [],
            name: 'renounceOwnership',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: true,
            inputs: [],
            name: 'owner',
            outputs: [{ name: '', type: 'address' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: true,
            inputs: [],
            name: 'isOwner',
            outputs: [{ name: '', type: 'bool' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: true,
            inputs: [],
            name: 'symbol',
            outputs: [{ name: '', type: 'string' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: 'spender', type: 'address' },
              { name: 'subtractedValue', type: 'uint256' },
            ],
            name: 'decreaseAllowance',
            outputs: [{ name: '', type: 'bool' }],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: 'recipient', type: 'address' },
              { name: 'amount', type: 'uint256' },
            ],
            name: 'transfer',
            outputs: [{ name: '', type: 'bool' }],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: true,
            inputs: [
              { name: 'owner', type: 'address' },
              { name: 'spender', type: 'address' },
            ],
            name: 'allowance',
            outputs: [{ name: '', type: 'uint256' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: false,
            inputs: [{ name: 'newOwner', type: 'address' }],
            name: 'transferOwnership',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            inputs: [
              { name: 'name', type: 'string' },
              { name: 'symbol', type: 'string' },
              { name: 'initialSupply', type: 'uint256' },
              { name: 'tokenURI', type: 'string' },
            ],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'constructor',
          },
          {
            anonymous: false,
            inputs: [{ indexed: false, name: 'tokenURI', type: 'string' }],
            name: 'TokenURIChanged',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [
              { indexed: true, name: 'previousOwner', type: 'address' },
              { indexed: true, name: 'newOwner', type: 'address' },
            ],
            name: 'OwnershipTransferred',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [
              { indexed: true, name: 'from', type: 'address' },
              { indexed: true, name: 'to', type: 'address' },
              { indexed: false, name: 'value', type: 'uint256' },
              { indexed: false, name: 'data', type: 'bytes' },
            ],
            name: 'Transfer',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [
              { indexed: true, name: 'from', type: 'address' },
              { indexed: true, name: 'to', type: 'address' },
              { indexed: false, name: 'value', type: 'uint256' },
            ],
            name: 'Transfer',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [
              { indexed: true, name: 'owner', type: 'address' },
              { indexed: true, name: 'spender', type: 'address' },
              { indexed: false, name: 'value', type: 'uint256' },
            ],
            name: 'Approval',
            type: 'event',
          },
          {
            constant: false,
            inputs: [{ name: 'tokenURI', type: 'string' }],
            name: 'setTokenURI',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
        ];
        break;
      case 'TransferManager':
        abi = [
          {
            constant: true,
            inputs: [],
            name: 'securityWindow',
            outputs: [{ name: '', type: 'uint256' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: true,
            inputs: [{ name: '_wallet', type: 'address' }],
            name: 'getNonce',
            outputs: [{ name: 'nonce', type: 'uint256' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: true,
            inputs: [{ name: '_wallet', type: 'address' }],
            name: 'getCurrentLimit',
            outputs: [{ name: '_currentLimit', type: 'uint256' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: '_wallet', type: 'address' },
              { name: '_module', type: 'address' },
            ],
            name: 'addModule',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: true,
            inputs: [{ name: '_wallet', type: 'address' }],
            name: 'getDailyUnspent',
            outputs: [
              { name: '_unspent', type: 'uint256' },
              { name: '_periodEnd', type: 'uint64' },
            ],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: true,
            inputs: [],
            name: 'securityPeriod',
            outputs: [{ name: '', type: 'uint256' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: true,
            inputs: [],
            name: 'oldLimitManager',
            outputs: [{ name: '', type: 'address' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: true,
            inputs: [],
            name: 'transferStorage',
            outputs: [{ name: '', type: 'address' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: false,
            inputs: [{ name: '_token', type: 'address' }],
            name: 'recoverToken',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: true,
            inputs: [{ name: '_wallet', type: 'address' }],
            name: 'getPendingLimit',
            outputs: [
              { name: '_pendingLimit', type: 'uint256' },
              { name: '_changeAfter', type: 'uint64' },
            ],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: '_wallet', type: 'address' },
              { name: '_data', type: 'bytes' },
              { name: '_nonce', type: 'uint256' },
              { name: '_signatures', type: 'bytes' },
              { name: '_gasPrice', type: 'uint256' },
              { name: '_gasLimit', type: 'uint256' },
            ],
            name: 'execute',
            outputs: [{ name: 'success', type: 'bool' }],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: true,
            inputs: [],
            name: 'priceProvider',
            outputs: [{ name: '', type: 'address' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: true,
            inputs: [{ name: '', type: 'address' }],
            name: 'relayer',
            outputs: [{ name: 'nonce', type: 'uint256' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: true,
            inputs: [],
            name: 'isOnlyOwnerModule',
            outputs: [{ name: '', type: 'bytes4' }],
            payable: false,
            stateMutability: 'pure',
            type: 'function',
          },
          {
            constant: true,
            inputs: [],
            name: 'guardianStorage',
            outputs: [{ name: '', type: 'address' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: true,
            inputs: [],
            name: 'defaultLimit',
            outputs: [{ name: '', type: 'uint256' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            inputs: [
              { name: '_registry', type: 'address' },
              { name: '_transferStorage', type: 'address' },
              { name: '_guardianStorage', type: 'address' },
              { name: '_priceProvider', type: 'address' },
              { name: '_securityPeriod', type: 'uint256' },
              { name: '_securityWindow', type: 'uint256' },
              { name: '_defaultLimit', type: 'uint256' },
              { name: '_oldLimitManager', type: 'address' },
            ],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'constructor',
          },
          {
            anonymous: false,
            inputs: [
              { indexed: true, name: 'wallet', type: 'address' },
              { indexed: true, name: 'target', type: 'address' },
              { indexed: false, name: 'whitelistAfter', type: 'uint64' },
            ],
            name: 'AddedToWhitelist',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [
              { indexed: true, name: 'wallet', type: 'address' },
              { indexed: true, name: 'target', type: 'address' },
            ],
            name: 'RemovedFromWhitelist',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [
              { indexed: true, name: 'wallet', type: 'address' },
              { indexed: true, name: 'id', type: 'bytes32' },
              { indexed: true, name: 'executeAfter', type: 'uint256' },
              { indexed: false, name: 'token', type: 'address' },
              { indexed: false, name: 'to', type: 'address' },
              { indexed: false, name: 'amount', type: 'uint256' },
              { indexed: false, name: 'data', type: 'bytes' },
            ],
            name: 'PendingTransferCreated',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [
              { indexed: true, name: 'wallet', type: 'address' },
              { indexed: true, name: 'id', type: 'bytes32' },
            ],
            name: 'PendingTransferExecuted',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [
              { indexed: true, name: 'wallet', type: 'address' },
              { indexed: true, name: 'id', type: 'bytes32' },
            ],
            name: 'PendingTransferCanceled',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [
              { indexed: true, name: 'wallet', type: 'address' },
              { indexed: true, name: 'newLimit', type: 'uint256' },
              { indexed: true, name: 'startAfter', type: 'uint64' },
            ],
            name: 'LimitChanged',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [
              { indexed: true, name: 'wallet', type: 'address' },
              { indexed: true, name: 'token', type: 'address' },
              { indexed: true, name: 'amount', type: 'uint256' },
              { indexed: false, name: 'to', type: 'address' },
              { indexed: false, name: 'data', type: 'bytes' },
            ],
            name: 'Transfer',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [
              { indexed: true, name: 'wallet', type: 'address' },
              { indexed: true, name: 'token', type: 'address' },
              { indexed: false, name: 'amount', type: 'uint256' },
              { indexed: false, name: 'spender', type: 'address' },
            ],
            name: 'Approved',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [
              { indexed: true, name: 'wallet', type: 'address' },
              { indexed: true, name: 'to', type: 'address' },
              { indexed: false, name: 'amount', type: 'uint256' },
              { indexed: false, name: 'data', type: 'bytes' },
            ],
            name: 'CalledContract',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [
              { indexed: true, name: 'wallet', type: 'address' },
              { indexed: true, name: 'success', type: 'bool' },
              { indexed: false, name: 'signedHash', type: 'bytes32' },
            ],
            name: 'TransactionExecuted',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [{ indexed: false, name: 'name', type: 'bytes32' }],
            name: 'ModuleCreated',
            type: 'event',
          },
          {
            anonymous: false,
            inputs: [{ indexed: false, name: 'wallet', type: 'address' }],
            name: 'ModuleInitialised',
            type: 'event',
          },
          {
            constant: false,
            inputs: [{ name: '_wallet', type: 'address' }],
            name: 'init',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: '_wallet', type: 'address' },
              { name: '_token', type: 'address' },
              { name: '_to', type: 'address' },
              { name: '_amount', type: 'uint256' },
              { name: '_data', type: 'bytes' },
            ],
            name: 'transferToken',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: '_wallet', type: 'address' },
              { name: '_token', type: 'address' },
              { name: '_to', type: 'address' },
              { name: '_amount', type: 'uint256' },
              { name: '_fee', type: 'uint256' },
              { name: '_data', type: 'bytes' },
            ],
            name: 'transferTokenWithFee',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: '_wallet', type: 'address' },
              { name: '_token', type: 'address' },
              { name: '_spender', type: 'address' },
              { name: '_amount', type: 'uint256' },
            ],
            name: 'approveToken',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: '_wallet', type: 'address' },
              { name: '_contract', type: 'address' },
              { name: '_value', type: 'uint256' },
              { name: '_data', type: 'bytes' },
            ],
            name: 'callContract',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: '_wallet', type: 'address' },
              { name: '_token', type: 'address' },
              { name: '_contract', type: 'address' },
              { name: '_amount', type: 'uint256' },
              { name: '_data', type: 'bytes' },
            ],
            name: 'approveTokenAndCallContract',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: '_wallet', type: 'address' },
              { name: '_target', type: 'address' },
            ],
            name: 'addToWhitelist',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: '_wallet', type: 'address' },
              { name: '_target', type: 'address' },
            ],
            name: 'removeFromWhitelist',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: '_wallet', type: 'address' },
              { name: '_token', type: 'address' },
              { name: '_to', type: 'address' },
              { name: '_amount', type: 'uint256' },
              { name: '_data', type: 'bytes' },
              { name: '_block', type: 'uint256' },
            ],
            name: 'executePendingTransfer',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: '_wallet', type: 'address' },
              { name: '_id', type: 'bytes32' },
            ],
            name: 'cancelPendingTransfer',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: false,
            inputs: [
              { name: '_wallet', type: 'address' },
              { name: '_newLimit', type: 'uint256' },
            ],
            name: 'changeLimit',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: false,
            inputs: [{ name: '_wallet', type: 'address' }],
            name: 'disableLimit',
            outputs: [],
            payable: false,
            stateMutability: 'nonpayable',
            type: 'function',
          },
          {
            constant: true,
            inputs: [
              { name: '_wallet', type: 'address' },
              { name: '_target', type: 'address' },
            ],
            name: 'isWhitelisted',
            outputs: [{ name: '_isWhitelisted', type: 'bool' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: true,
            inputs: [
              { name: '_wallet', type: 'address' },
              { name: '_id', type: 'bytes32' },
            ],
            name: 'getPendingTransfer',
            outputs: [{ name: '_executeAfter', type: 'uint64' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: true,
            inputs: [
              { name: '_data', type: 'bytes' },
              { name: '_signature', type: 'bytes' },
            ],
            name: 'isValidSignature',
            outputs: [{ name: '', type: 'bytes4' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
          {
            constant: true,
            inputs: [
              { name: '_msgHash', type: 'bytes32' },
              { name: '_signature', type: 'bytes' },
            ],
            name: 'isValidSignature',
            outputs: [{ name: '', type: 'bytes4' }],
            payable: false,
            stateMutability: 'view',
            type: 'function',
          },
        ];
        break;
      default:
        throw `ABI does not exists for ${name}`;
    }

    return JSON.stringify(abi);
  }
}
